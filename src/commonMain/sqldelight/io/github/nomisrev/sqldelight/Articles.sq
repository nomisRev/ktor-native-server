import io.github.nomisrev.repo.ArticleId;
import io.github.nomisrev.repo.UserId;

CREATE TABLE IF NOT EXISTS articles(
    id BIGSERIAL AS ArticleId PRIMARY KEY,
    slug VARCHAR(255) UNIQUE NOT NULL,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    body TEXT NOT NULL,
    author_id BIGINT AS UserId REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    createdAt VARCHAR(50) NOT NULL,
    updatedAt VARCHAR(50) NOT NULL
);

--     createdAt VARCHAR(50) AS OffsetDateTime NOT NULL,
--     updatedAt VARCHAR(50) AS OffsetDateTime NOT NULL

amountOfArticleForAuthor:
SELECT COUNT(id)
FROM articles
WHERE author_id = :authorId;

selectArticlesOfAuthor:
SELECT id, slug, title, description, body, author_id, createdAt, updatedAt
FROM articles
WHERE author_id = :authorId
ORDER BY createdAt DESC
LIMIT :limit OFFSET :offset;

update:
UPDATE articles
SET title = :title, description = :description, body = :body;

insertAndGetId:
INSERT INTO articles(slug, title, description, body, author_id, createdAt, updatedAt)
VALUES (:slug, :title, :description, :body, :authorId, :createdAt, :updatedAt)
RETURNING id;

selectBySlug:
SELECT id, slug, title, description, body, author_id, createdAt, updatedAt
FROM articles
WHERE slug = :slug;

slugExists:
SELECT EXISTS(
  SELECT 1
  FROM articles
  WHERE slug= :slug
  LIMIT 1
);

delete:
DELETE FROM articles
WHERE id = :articleId;